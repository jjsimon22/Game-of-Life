{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/StarWarsDB/Homeworld.js\";\nimport React, { Component } from 'react';\nconst cache = {};\n\nclass Homeworld extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      homeworld: \"\",\n      isLoaded: false // constructor(props) {\n      //   super(props);\n      //   this.state = {\n      //     homeworld: \"\"\n      //   }\n      // }\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(this.props.api).then(res => res.json()).then(result => {\n      cache[this.props.api] = result.name;\n      this.setState({\n        isLoaded: false,\n        homeworld: result.name\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.homeworld);\n  }\n\n}\n\nexport default Homeworld;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/StarWarsDB/Homeworld.js"],"names":["React","Component","cache","Homeworld","state","homeworld","isLoaded","componentDidMount","fetch","props","api","then","res","json","result","name","setState","error","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,MAAMC,KAAK,GAAG,EAAd;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCG,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,KAFJ,CAIR;AACA;AACA;AACA;AACA;AACA;;AATQ,KAFwB;AAAA;;AAahCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,KAAKC,KAAL,CAAWC,GAAZ,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRZ,MAAAA,KAAK,CAAC,KAAKO,KAAL,CAAWC,GAAZ,CAAL,GAAwBI,MAAM,CAACC,IAA/B;AACA,WAAKC,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,KADA;AAEVD,QAAAA,SAAS,EAAES,MAAM,CAACC;AAFR,OAAd;AAIH,KATT,EAUQ;AACA;AACA;AACCE,IAAAA,KAAD,IAAW;AACP,WAAKD,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KAjBT,EAkBMY,KAlBN,CAkBaC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KApBL;AAqBD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKlB,KAAL,CAAWC,SAAlB,CAAR;AACD;;AAvC+B;;AA2ClC,eAAeF,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nconst cache = {};\n\nclass Homeworld extends Component {\n  \n  state = {\n    homeworld: \"\",\n    isLoaded: false\n  }\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     homeworld: \"\"\n  //   }\n  // }\n\n  componentDidMount() {\n    fetch(this.props.api)\n        .then(res => res.json())\n        .then(\n            (result) => {\n                cache[this.props.api] = result.name;\n                this.setState({\n                    isLoaded: false,\n                    homeworld: result.name\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true\n                });\n            }\n        ).catch((err) => {\n            console.log(err);\n        })\n  }\n\n  render() {\n    return (<span>{this.state.homeworld}</span>)\n  }\n\n}\n\nexport default Homeworld;"]},"metadata":{},"sourceType":"module"}