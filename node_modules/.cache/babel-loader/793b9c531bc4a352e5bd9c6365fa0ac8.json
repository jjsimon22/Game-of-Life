{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/GameOfLife/GameOfLife.js\";\nimport React, { Component } from 'react';\nimport './GameOfLife.css';\n\nclass GameOfLife extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getLiveNeighbors = (row, col) => {\n      let neighbors = 0;\n      [row - 1, row, row + 1].forEach(r => {\n        if (r >= 0 && r < this.state.rows) {\n          if (col - 1 >= 0 && this.state.grid[r][col - 1] === 1) {\n            neighbors++;\n          }\n\n          if (this.state.grid[r][col] === 1) {\n            neighbors++;\n          }\n\n          if (col + 1 < this.state.cols && this.state.grid[r][col + 1] === 1) {\n            neighbors++;\n          }\n        }\n      });\n      return neighbors;\n    };\n\n    this.nextGen = () => {\n      let next = this.state.grid.slice();\n\n      for (let r = 0; r < rows; r++) {\n        for (let c = 0; c < cols; c++) {\n          // count live neighbors\n          if (this.state.grid[r][c] === 0) {}\n        }\n      }\n    };\n\n    this.state = {\n      rows: 10,\n      cols: 10,\n      grid: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 1, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\n    };\n  } // componentWillMount(){}\n  // componentDidMount(){}\n  // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  render() {\n    const rows = this.state.grid.map((row, i) => {\n      const cells = row.map((status, j) => {\n        const classname = status ? \"alive\" : \"dead\";\n        return React.createElement(\"td\", {\n          key: j,\n          className: classname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, status);\n      });\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, cells);\n    });\n    return React.createElement(\"div\", {\n      className: \"GameOfLife\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Game of Life\"), React.createElement(\"button\", {\n      onClick: nextGen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Next Gen\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, rows)));\n  }\n\n}\n\nexport default GameOfLife;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/GameOfLife/GameOfLife.js"],"names":["React","Component","GameOfLife","constructor","props","getLiveNeighbors","row","col","neighbors","forEach","r","state","rows","grid","cols","nextGen","next","slice","c","render","map","i","cells","status","j","classname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './GameOfLife.css';\n\nclass GameOfLife extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            rows: 10,\n            cols: 10,\n            grid: [\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,1,0,0,0,0,0,0,0],\n                [0,0,1,0,0,1,0,0,0,0],\n                [0,0,1,0,0,1,1,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0],\n                [0,0,1,1,0,0,0,0,0,0],\n                [0,0,0,1,0,0,0,0,0,0],\n                [0,0,0,0,0,0,0,0,0,0]\n            ]\n        };\n    }\n\n    // componentWillMount(){}\n    // componentDidMount(){}\n    // componentWillUnmount(){}\n\n    // componentWillReceiveProps(){}\n    // shouldComponentUpdate(){}\n    // componentWillUpdate(){}\n    // componentDidUpdate(){}\n\n    getLiveNeighbors = (row, col) => {\n\n        let neighbors = 0;\n        [row-1, row, row+1].forEach((r) => {\n            if ((r >= 0) && (r < this.state.rows)) {\n                if (((col-1) >= 0) && (this.state.grid[r][col-1] === 1)) {\n                    neighbors++;\n                }\n                if (this.state.grid[r][col] === 1) {\n                    neighbors++;\n                }\n                if (((col+1) < this.state.cols) && (this.state.grid[r][col+1] === 1)) {\n                    neighbors++;\n                }    \n            }\n        });\n        return neighbors;\n    }\n\n    nextGen = () => {\n        let next = this.state.grid.slice();\n\n        for (let r=0; r<rows; r++) {\n            for (let c=0; c<cols; c++) {\n\n                // count live neighbors\n                if (this.state.grid[r][c] === 0) {\n\n                }\n            }\n        }\n    }\n\n    render() {\n        const rows = this.state.grid.map((row, i) => {\n            const cells = row.map((status, j) => {\n                const classname = status ? \"alive\" : \"dead\";\n                return <td key={j} className={classname}>{status}</td> \n            });\n            return <tr key={i}>{cells}</tr>\n        });\n\n        return (\n            <div className=\"GameOfLife\">\n                <p>Game of Life</p>\n                <button onClick={nextGen}>Next Gen</button>\n                <table>\n                    <tbody>\n                        {rows}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default GameOfLife;"]},"metadata":{},"sourceType":"module"}