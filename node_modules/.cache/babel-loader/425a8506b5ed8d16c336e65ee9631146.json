{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/Todo/Todo.js\";\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nfunction TodoItem(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: \"{this.item.completed}\",\n    onChange: \"{props.onChange(e)}\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), \" \", props.item.value);\n}\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoInput: \"\",\n      todoList: []\n    }; //this.handleChange = this.handleChange.bind(this);\n  } // componentWillMount(){}\n  // componentDidMount(){}\n  // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  handleChange(event) {\n    this.setState({\n      todoInput: event.target.value\n    });\n  }\n\n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: false\n      }]),\n      todoInput: \"\"\n    });\n  }\n\n  markItem(i) {\n    console.log(i, this.state.todoList[i]);\n  }\n\n  listToJSXMap(elt, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(TodoItem, {\n      value: elt.item,\n      changeHandler: i => this.markItem(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const todoItems = this.state.todoList.filter(item => {\n      if (!item.completed) {\n        return item;\n      }\n    }).map(listToJSXMap);\n    const completedItems = this.state.todoList.filter(item => {\n      if (item.completed) {\n        return item;\n      }\n    }).map(listToJSXMap);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"This is the Todo component: \", this.props.testprop), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.todoInput,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, todoItems)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, completedItems)));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/Todo/Todo.js"],"names":["React","Component","TodoItem","props","item","value","Todo","constructor","state","todoInput","todoList","handleChange","event","setState","target","addItem","todolist","slice","concat","completed","markItem","i","console","log","listToJSXMap","elt","render","todoItems","filter","map","completedItems","testprop","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nfunction TodoItem(props) {\n  return (\n    <div>\n      <input type=\"checkbox\"\n        checked=\"{this.item.completed}\"\n        onChange=\"{props.onChange(e)}\"/> {props.item.value}\n    </div>\n  );\n}\n\nclass Todo extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todoInput: \"\",\n      todoList: []\n    };\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  // componentWillMount(){}\n  // componentDidMount(){}\n  // componentWillUnmount(){}\n\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n  handleChange(event) {\n    this.setState({todoInput: event.target.value});\n  }\n  \n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: false\n      }]),\n      todoInput: \"\"\n    });\n  }\n  \n  markItem(i) {\n    console.log(i, this.state.todoList[i]);\n  }\n  \n  listToJSXMap(elt,i) {\n    return (\n      <li key={i}>\n        <TodoItem value={elt.item} changeHandler={(i) => this.markItem(i)}/>\n      </li>\n    );\n  }\n        \n  render() {\n    const todoItems = this.state.todoList.filter((item) => {\n      if (!item.completed) {\n        return item;\n      }\n    }).map(listToJSXMap);\n    \n    const completedItems = this.state.todoList.filter((item) => {\n      if (item.completed) {\n        return item;\n      }\n    }).map(listToJSXMap);\n    \n    return (\n      <div>\n        <div>This is the Todo component: {this.props.testprop}</div>\n        <input type=\"text\" value={this.state.todoInput} onChange={(e) => this.handleChange(e) } />\n        <button onClick={() => this.addItem()}>Add</button>\n        <div>\n          <ul>\n            {todoItems}\n          </ul>\n        </div>\n        <div>\n          <ul>\n            {completedItems}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}