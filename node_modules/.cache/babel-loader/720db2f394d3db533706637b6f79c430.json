{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js\";\nimport React, { Component } from 'react';\nimport './TeamRoster.css';\nconst apiServer = \"http://localhost:8080\";\n\nclass TeamRoster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roster: [],\n      currentPlayerViewing: null\n    };\n  } // componentWillMount(){}\n\n\n  componentDidMount() {\n    fetch(apiServer + \"/players\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        roster: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  viewPlayerDetails(player) {\n    this.setState({\n      currentPlayerViewing: player\n    });\n  }\n\n  render() {\n    const rosterRows = this.state.roster.map(player => {\n      return React.createElement(\"tr\", {\n        key: player.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, player.firstName, \" \", player.lastName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, player.position), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.viewPlayerDetails(player),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Details\")));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Position\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, rosterRows))), this.state.currentPlayerViewing !== null ? React.createElement(PlayerDetail, {\n      player: this.state.currentPlayerViewing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nclass PlayerDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let salary = this.props.player.salary.toString();\n    let salaryStr = \"\",\n        charCnt = 0;\n\n    for (let i = salary.length - 1; i >= 0; i--) {\n      if (charCnt > 0 && charCnt % 3 === 0) {\n        salaryStr = \",\" + salaryStr;\n      }\n\n      salaryStr = salary.charAt(i) + salaryStr;\n      charCnt++;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Position\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Height\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Weight\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"College\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Salary\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, this.props.player.firstName, \" \", this.props.player.lastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.player.position), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.props.player.age), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.player.height), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.props.player.weight), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.props.player.college), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"$\", salaryStr)))));\n  }\n\n}\n\nexport default TeamRoster;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js"],"names":["React","Component","apiServer","TeamRoster","constructor","props","state","roster","currentPlayerViewing","componentDidMount","fetch","then","res","json","result","setState","isLoaded","error","catch","err","console","log","viewPlayerDetails","player","render","rosterRows","map","id","firstName","lastName","position","PlayerDetail","salary","toString","salaryStr","charCnt","i","length","charAt","age","height","weight","college"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './TeamRoster.css';\n\nconst apiServer = \"http://localhost:8080\";\n\nclass TeamRoster extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            roster: [],\n            currentPlayerViewing: null\n        };\n    }\n\n  // componentWillMount(){}\n    componentDidMount() {\n        fetch(apiServer+\"/players\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    roster: result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        ).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    // componentWillUnmount(){}\n    // componentWillReceiveProps(){}\n    // shouldComponentUpdate(){}\n    // componentWillUpdate(){}\n    // componentDidUpdate(){}\n\n    viewPlayerDetails(player) {\n        this.setState({ currentPlayerViewing: player });\n    }\n\n    render() {\n    \n        const rosterRows = this.state.roster.map((player) => {\n            return (\n                <tr key={player.id}>\n                    <td>{player.firstName} {player.lastName}</td>\n                    <td>{player.position}</td>\n                    <td><button onClick={() => this.viewPlayerDetails(player)}>Details</button></td>\n                    {/*\n                    <td>{player.age}</td>\n                    <td>{player.height}</td>\n                    <td>{player.weight}</td>\n                    <td>{player.college}</td>\n                    <td>{player.salary}</td>*/\n                    }\n                </tr>\n            )\n        })\n\n        return (\n        <div>\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Position</th>\n                            <th></th>\n                            {/*<th>Height</th>\n                            <th>Weight</th>\n                            <th>College</th>\n                            <th>Salary</th>*/\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>{rosterRows}</tbody>\n                </table>\n            </div>\n            {\n            (this.state.currentPlayerViewing !== null) ? <PlayerDetail player={this.state.currentPlayerViewing} /> : null\n            }\n        </div>\n        );\n    }\n}\n\nclass PlayerDetail extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        \n      }\n    }\n    \n    render(){\n\n        let salary = this.props.player.salary.toString();\n        let salaryStr = \"\", charCnt = 0;\n        for (let i=salary.length-1; i>=0; i--) {\n            if (charCnt > 0 && charCnt % 3 === 0) {\n                salaryStr = \",\" + salaryStr;\n            }\n            salaryStr =  salary.charAt(i) + salaryStr;\n            charCnt++;\n        }\n\n        return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Position</th>\n                        <th>Age</th>\n                        <th>Height</th>\n                        <th>Weight</th>\n                        <th>College</th>\n                        <th>Salary</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{this.props.player.firstName} {this.props.player.lastName}</td>\n                        <td>{this.props.player.position}</td>\n                        <td>{this.props.player.age}</td>\n                        <td>{this.props.player.height}</td>\n                        <td>{this.props.player.weight}</td>\n                        <td>{this.props.player.college}</td>\n                        <td>${salaryStr}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        );\n    }\n  }\n\nexport default TeamRoster;\n"]},"metadata":{},"sourceType":"module"}