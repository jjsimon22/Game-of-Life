{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js\";\nimport React, { Component } from 'react';\nimport './TeamRoster.css';\n\nclass TeamRoster extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // componentWillMount(){}\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/player\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        roster: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  render() {\n    console.log(this.state.roster);\n    const rosterRows = this.state.roster.map(player => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, player.firstName, \" \", player.lastName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, player.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, player.height), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, player.weight), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, player.college), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, player.salary));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, rosterRows));\n  }\n\n}\n\nexport default TeamRoster;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js"],"names":["React","Component","TeamRoster","constructor","props","state","componentDidMount","fetch","then","res","json","result","setState","isLoaded","roster","error","render","console","log","rosterRows","map","player","firstName","lastName","age","height","weight","college","salary"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACH,GAJ8B,CAMjC;;;AACEC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAGKG,MAAD,IAAY;AACR,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,MAAM,EAAEH;AAFE,OAAd;AAIH,KARL,EASI;AACA;AACA;AACCI,IAAAA,KAAD,IAAW;AACP,WAAKH,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVE,QAAAA;AAFU,OAAd;AAIH,KAjBL;AAmBH,GA3B8B,CA4BjC;AAEA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWS,MAAvB;AACA,UAAMK,UAAU,GAAG,KAAKd,KAAL,CAAWS,MAAX,CAAkBM,GAAlB,CAAuBC,MAAD,IAAY;AACjD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,MAAM,CAACC,SAAZ,OAAwBD,MAAM,CAACE,QAA/B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,MAAM,CAACG,GAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,MAAM,CAACI,MAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,MAAM,CAACK,MAAZ,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,MAAM,CAACM,OAAZ,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKN,MAAM,CAACO,MAAZ,CANJ,CADJ;AAUH,KAXkB,CAAnB;AAYA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,UADL,CADN,CADF;AAOD;;AAzDgC;;AA4DnC,eAAejB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport './TeamRoster.css';\n\nclass TeamRoster extends Component {\n    constructor(props){\n        super(props);\n        this.state = {};\n    }\n\n  // componentWillMount(){}\n    componentDidMount() {\n        fetch(\"http://localhost:8080/player\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    roster: result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        )\n    }\n  // componentWillUnmount(){}\n\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n  render() {\n    \n    console.log(this.state.roster);\n    const rosterRows = this.state.roster.map((player) => {\n        return (\n            <tr>\n                <td>{player.firstName} {player.lastName}</td>\n                <td>{player.age}</td>\n                <td>{player.height}</td>\n                <td>{player.weight}</td>\n                <td>{player.college}</td>\n                <td>{player.salary}</td>\n            </tr>\n        )\n    })\n    return (\n      <div>\n            <table>\n                {rosterRows}\n            </table>\n      </div>\n    );\n  }\n}\n\nexport default TeamRoster;"]},"metadata":{},"sourceType":"module"}