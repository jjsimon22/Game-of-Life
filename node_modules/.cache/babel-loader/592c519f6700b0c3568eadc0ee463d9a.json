{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/Todo/Todo.js\";\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false\n    };\n  }\n\n  handleMouseEnter() {\n    this.setState({\n      isHovering: true\n    });\n  }\n\n  handleMouseLeave() {\n    this.setState({\n      isHovering: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onMouseEnter: () => this.handleMouseEnter(),\n      onMouseLeave: () => this.handleMouseLeave(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.props.item.completed,\n      onChange: this.props.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), \" \", this.props.item.item, this.state.isHovering > 0 ? React.createElement(\"span\", {\n      style: {\n        paddingLeft: '5px',\n        cursor: 'pointer'\n      },\n      onClick: this.props.deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"X\") : null);\n  }\n\n}\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.id = 0;\n    this.state = {\n      todoInput: \"\",\n      todoList: [{\n        item: \"First\",\n        completed: false,\n        id: 100\n      }, {\n        item: \"Second\",\n        completed: false,\n        id: 101\n      }, {\n        item: \"Third\",\n        completed: true,\n        id: 102\n      }]\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      todoInput: event.target.value\n    });\n  }\n\n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: false,\n        id: this.id++\n      }]),\n      todoInput: \"\"\n    });\n  }\n\n  markItem(item) {\n    let todolist = this.state.todoList.slice();\n    todolist.forEach(li => {\n      if (li.id === item.id) {\n        li.completed = !li.completed;\n      }\n    });\n    this.setState({\n      todoList: todolist\n    });\n  }\n\n  deleteItem(item) {\n    let todolist = this.state.todoList.slice();\n\n    for (let i = 0; i < todolist.length; i++) {\n      if (todolist[i].id === item.id) {\n        todolist.splice(i, 1);\n        break;\n      }\n    }\n\n    this.setState({\n      todoList: todolist\n    });\n  }\n\n  listToJSXMap(elt, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TodoItem, {\n      item: elt,\n      changeHandler: () => this.markItem(elt),\n      deleteItem: () => this.deleteItem(elt),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const todoItems = this.state.todoList.filter(item => !item.completed).map((elt, i) => this.listToJSXMap(elt, i));\n    const completedItems = this.state.todoList.filter(item => item.completed).map((elt, i) => this.listToJSXMap(elt, i));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"This is the Todo component\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.todoInput,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, todoItems)), completedItems.length > 0 ? React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Completed\") : null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"completed-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, completedItems)));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/Todo/Todo.js"],"names":["React","Component","TodoItem","constructor","props","state","isHovering","handleMouseEnter","setState","handleMouseLeave","render","item","completed","changeHandler","paddingLeft","cursor","deleteItem","Todo","id","todoInput","todoList","handleChange","event","target","value","addItem","todolist","slice","concat","markItem","forEach","li","i","length","splice","listToJSXMap","elt","todoItems","filter","map","completedItems","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nclass TodoItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false\n    }\n  }\n  \n  handleMouseEnter() { this.setState({ isHovering: true }); }\n  handleMouseLeave() { this.setState({ isHovering: false }); }\n  \n  render(){\n    return (\n      <div\n          onMouseEnter={() => this.handleMouseEnter()}\n          onMouseLeave={() => this.handleMouseLeave()}>\n        <input type=\"checkbox\"\n          checked={this.props.item.completed}\n          onChange={this.props.changeHandler}/> {this.props.item.item}\n        {\n          this.state.isHovering > 0 ?\n          <span style={{paddingLeft:'5px', cursor: 'pointer'}}\n            onClick={this.props.deleteItem}>X</span> : null\n        }\n      </div>\n    );\n  }\n}\n\nclass Todo extends Component {\n  constructor(props){\n    super(props);\n    this.id = 0;\n    this.state = {\n      todoInput: \"\",\n      todoList: [{item:\"First\",completed:false,id:100},{item:\"Second\",completed:false,id:101},{item:\"Third\",completed:true,id:102}]\n    };\n    \n  }\n  handleChange(event) {\n    this.setState({todoInput: event.target.value});\n  }\n  \n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: false,\n        id: this.id++\n      }]),\n      todoInput: \"\"\n    });\n  }\n  \n  markItem(item) {\n    let todolist = this.state.todoList.slice();\n    todolist.forEach((li) => {\n      if (li.id === item.id) {\n        li.completed = !li.completed;\n      }\n    })\n    this.setState({ todoList: todolist });\n  }\n  deleteItem(item) {\n    let todolist = this.state.todoList.slice();\n    for (let i=0; i<todolist.length; i++) {\n      if (todolist[i].id === item.id) {\n        todolist.splice(i,1);\n        break;\n      }\n    }\n    this.setState({ todoList: todolist });\n  }\n  \n  listToJSXMap(elt,i) {\n    return (\n      <li key={i}>\n        <TodoItem item={elt}\n          changeHandler={() => this.markItem(elt)}\n          deleteItem={() => this.deleteItem(elt)}\n          />\n      </li>\n    );\n  }\n        \n  render() {\n    const todoItems = this.state.todoList\n                      .filter((item) => !item.completed)\n                      .map((elt, i) => this.listToJSXMap(elt,i));\n    const completedItems = this.state.todoList\n                            .filter((item) => item.completed)\n                            .map((elt, i) => this.listToJSXMap(elt,i));\n    \n    return (\n      <div>\n        <div>This is the Todo component</div>\n        <input type=\"text\" value={this.state.todoInput} onChange={(e) => this.handleChange(e) } />\n        <button onClick={() => this.addItem()}>Add</button>\n        <div>\n          <ul>\n            {todoItems}\n          </ul>\n        </div>\n        {\n          completedItems.length > 0 ? <h3>Completed</h3> : null\n        }\n        <div>\n          <ul className=\"completed-items\">\n            {completedItems}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}