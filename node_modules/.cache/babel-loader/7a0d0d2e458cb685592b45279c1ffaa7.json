{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js\";\nimport React, { Component } from 'react';\nimport './TeamRoster.css';\nconst apiServer = \"http://localhost:8080\";\n\nclass TeamRoster extends Component {\n  constructor(props) {\n    super(props);\n\n    this.viewPlayerDetails = e => {\n      const value = e.target.value;\n      this.setState({\n        viewingPlayerID: value\n      });\n    };\n\n    this.state = {\n      roster: [],\n      viewingPlayerID: null\n    };\n  } // componentWillMount(){}\n\n\n  componentDidMount() {\n    fetch(apiServer + \"/nba/players\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        roster: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  } // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  render() {\n    const rosterRows = this.state.roster.map(player => {\n      return React.createElement(\"tr\", {\n        key: player.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, player.firstName, \" \", player.lastName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, player.position), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        value: player.id,\n        onClick: this.viewPlayerDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Details\")));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Position\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, rosterRows))), this.state.viewingPlayerID !== null ? React.createElement(PlayerDetail, {\n      playerId: this.state.viewingPlayerID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nclass PlayerDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: null,\n      prevPlayerId: null\n    };\n  }\n\n  fetchPlayer() {\n    fetch(apiServer + \"/nba/players/\" + this.props.playerId).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        player: result,\n        prevPlayerId: this.props.playerId\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.fetchPlayer();\n  }\n\n  componentDidUpdate() {\n    if (this.state.prevPlayerId !== this.props.playerId) {\n      this.fetchPlayer();\n    }\n  }\n\n  componentShouldUpdate() {\n    console.log(this.state.prevPlayerId, this.props.playerId);\n    return this.state.prevPlayerId !== this.props.playerId;\n  }\n\n  render() {\n    let salaryStr = \"\";\n\n    if (this.state.player) {\n      let salary = this.state.player.salary.toString();\n      let charCnt = 0;\n\n      for (let i = salary.length - 1; i >= 0; i--) {\n        if (charCnt > 0 && charCnt % 3 === 0) {\n          salaryStr = \",\" + salaryStr;\n        }\n\n        salaryStr = salary.charAt(i) + salaryStr;\n        charCnt++;\n      }\n    }\n\n    if (!this.state.player) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Position\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Age\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Height\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Weight\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"College\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Salary\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.player.firstName, \" \", this.state.player.lastName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.player.position), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.player.age), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.player.height), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, this.state.player.weight), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.player.college), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"$\", salaryStr)))));\n  }\n\n}\n\nexport default TeamRoster;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/TeamRoster/TeamRoster.js"],"names":["React","Component","apiServer","TeamRoster","constructor","props","viewPlayerDetails","e","value","target","setState","viewingPlayerID","state","roster","componentDidMount","fetch","then","res","json","result","isLoaded","error","catch","err","console","log","render","rosterRows","map","player","id","firstName","lastName","position","PlayerDetail","prevPlayerId","fetchPlayer","playerId","componentDidUpdate","componentShouldUpdate","salaryStr","salary","toString","charCnt","i","length","charAt","age","height","weight","college"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './TeamRoster.css';\n\nconst apiServer = \"http://localhost:8080\";\n\nclass TeamRoster extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            roster: [],\n            viewingPlayerID: null\n        };\n    }\n\n  // componentWillMount(){}\n    componentDidMount() {\n        fetch(apiServer+\"/nba/players\")\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    roster: result\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        ).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    // componentWillUnmount(){}\n    // componentWillReceiveProps(){}\n    // shouldComponentUpdate(){}\n    // componentWillUpdate(){}\n    // componentDidUpdate(){}\n\n    viewPlayerDetails = (e) => {\n        const {value} = e.target\n        this.setState({ viewingPlayerID: value });\n    }\n\n    render() {\n    \n        const rosterRows = this.state.roster.map((player) => {\n            return (\n                <tr key={player.id}>\n                    <td>{player.firstName} {player.lastName}</td>\n                    <td>{player.position}</td>\n                    <td><button value={player.id} onClick={this.viewPlayerDetails}>Details</button></td>\n                    {/*\n                    <td>{player.age}</td>\n                    <td>{player.height}</td>\n                    <td>{player.weight}</td>\n                    <td>{player.college}</td>\n                    <td>{player.salary}</td>*/\n                    }\n                </tr>\n            )\n        })\n\n        return (\n        <div>\n            <div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Position</th>\n                            <th></th>\n                            {/*<th>Height</th>\n                            <th>Weight</th>\n                            <th>College</th>\n                            <th>Salary</th>*/\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>{rosterRows}</tbody>\n                </table>\n            </div>\n            {\n            (this.state.viewingPlayerID !== null) ? <PlayerDetail playerId={this.state.viewingPlayerID}/> : null\n            }\n        </div>\n        );\n    }\n}\n\nclass PlayerDetail extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            player: null,\n            prevPlayerId: null\n        }\n    }\n    \n    fetchPlayer() {\n        fetch(apiServer+\"/nba/players/\"+this.props.playerId)\n        .then(res => res.json())\n        .then(\n\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    player: result,\n                    prevPlayerId: this.props.playerId\n                });\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        ).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    componentDidMount() {\n        this.fetchPlayer();\n    }\n\n    componentDidUpdate() {\n        if (this.state.prevPlayerId !== this.props.playerId) {\n            this.fetchPlayer();\n        }\n    }\n\n    componentShouldUpdate() {\n        console.log(this.state.prevPlayerId, this.props.playerId)\n        return this.state.prevPlayerId !== this.props.playerId;\n    }\n\n    render(){\n\n        \n        let salaryStr = \"\";\n        if (this.state.player) {\n            let salary = this.state.player.salary.toString();\n            let charCnt = 0;\n            for (let i=salary.length-1; i>=0; i--) {\n                if (charCnt > 0 && charCnt % 3 === 0) {\n                    salaryStr = \",\" + salaryStr;\n                }\n                salaryStr =  salary.charAt(i) + salaryStr;\n                charCnt++;\n            }\n        }\n\n\n        if (!this.state.player) {\n            return (null);\n        }\n\n        return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Position</th>\n                        <th>Age</th>\n                        <th>Height</th>\n                        <th>Weight</th>\n                        <th>College</th>\n                        <th>Salary</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>{this.state.player.firstName} {this.state.player.lastName}</td>\n                        <td>{this.state.player.position}</td>\n                        <td>{this.state.player.age}</td>\n                        <td>{this.state.player.height}</td>\n                        <td>{this.state.player.weight}</td>\n                        <td>{this.state.player.college}</td>\n                        <td>${salaryStr}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        );\n    }\n  }\n\nexport default TeamRoster;\n"]},"metadata":{},"sourceType":"module"}