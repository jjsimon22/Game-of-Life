{"ast":null,"code":"var _jsxFileName = \"/home/jeffsimon22/react/my-projects/src/Todo/Todo.js\";\nimport React, { Component } from 'react';\nimport './Todo.css';\n\nfunction TodoItem(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: props.item.completed,\n    onChange: props.changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), \" \", props.item.item);\n}\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoInput: \"\",\n      todoList: []\n    }; //this.handleChange = this.handleChange.bind(this);\n  } // componentWillMount(){}\n  // componentDidMount(){}\n  // componentWillUnmount(){}\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n\n\n  handleChange(event) {\n    this.setState({\n      todoInput: event.target.value\n    });\n  }\n\n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: true\n      }]),\n      todoInput: \"\"\n    });\n  }\n\n  markItem(i) {\n    let todolist = this.state.todoList.slice();\n    todolist[i].completed = !todolist[i].completed;\n    this.setState({\n      todoList: todolist\n    });\n  }\n\n  listToJSXMap(elt, i) {\n    return React.createElement(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TodoItem, {\n      item: elt,\n      changeHandler: () => this.markItem(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const todoItems = this.state.todoList.filter(item => !item.completed).map((elt, i) => this.listToJSXMap(elt, i));\n    const completedItems = this.state.todoList.filter(item => item.completed).map((elt, i) => this.listToJSXMap(elt, i));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"This is the Todo component: \", this.props.testprop), React.createElement(\"button\", {\n      onClick: () => this.markItem(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"mark item\"), React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.todoInput,\n      onChange: e => this.handleChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, todoItems)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, completedItems)));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/jeffsimon22/react/my-projects/src/Todo/Todo.js"],"names":["React","Component","TodoItem","props","item","completed","changeHandler","Todo","constructor","state","todoInput","todoList","handleChange","event","setState","target","value","addItem","todolist","slice","concat","markItem","i","listToJSXMap","elt","render","todoItems","filter","map","completedItems","testprop","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Todo.css';\n\nfunction TodoItem(props) {\n  return (\n    <div>\n      <input type=\"checkbox\"\n        checked={props.item.completed}\n        onChange={props.changeHandler}/> {props.item.item}\n    </div>\n  );\n}\n\nclass Todo extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      todoInput: \"\",\n      todoList: []\n    };\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  // componentWillMount(){}\n  // componentDidMount(){}\n  // componentWillUnmount(){}\n\n  // componentWillReceiveProps(){}\n  // shouldComponentUpdate(){}\n  // componentWillUpdate(){}\n  // componentDidUpdate(){}\n  handleChange(event) {\n    this.setState({todoInput: event.target.value});\n  }\n  \n  addItem() {\n    const todolist = this.state.todoList.slice();\n    this.setState({\n      todoList: todolist.concat([{\n        item: this.state.todoInput,\n        completed: true\n      }]),\n      todoInput: \"\"\n    });\n  }\n  \n  markItem(i) {\n    let todolist = this.state.todoList.slice()\n    todolist[i].completed = !todolist[i].completed;\n    this.setState({ todoList: todolist });\n  }\n  \n  listToJSXMap(elt,i) {\n    return (\n      <li key={i}>\n        <TodoItem item={elt} changeHandler={() => this.markItem(i) }/>\n      </li>\n    );\n  }\n        \n  render() {\n    const todoItems = this.state.todoList\n                      .filter((item) => !item.completed)\n                      .map((elt, i) => this.listToJSXMap(elt,i));\n    \n    const completedItems = this.state.todoList\n                            .filter((item) => item.completed)\n                            .map((elt, i) => this.listToJSXMap(elt,i));\n    \n    return (\n      <div>\n        <div>This is the Todo component: {this.props.testprop}</div>\n        <button onClick={() => this.markItem(1)}>mark item</button>\n        <input type=\"text\" value={this.state.todoInput} onChange={(e) => this.handleChange(e) } />\n        <button onClick={() => this.addItem()}>Add</button>\n        <div>\n          <ul>\n            {todoItems}\n          </ul>\n        </div>\n        <div>\n          <ul>\n            {completedItems}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}